<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)

    pole-architecture.dga-dsi-psi@diplomatie.gouv.fr

    Ce logiciel est un programme informatique servant à faciliter la création
    d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA

    Ce logiciel est régi par la licence CeCILL soumise au droit français et
    respectant les principes de diffusion des logiciels libres. Vous pouvez
    utiliser, modifier et/ou redistribuer ce programme sous les conditions
    de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
    sur le site "http://www.cecill.info".

    En contrepartie de l'accessibilité au code source et des droits de copie,
    de modification et de redistribution accordés par cette licence, il n'est
    offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
    seule une responsabilité restreinte pèse sur l'auteur du programme,  le
    titulaire des droits patrimoniaux et les concédants successifs.

    A cet égard  l'attention de l'utilisateur est attirée sur les risques
    associés au chargement,  à l'utilisation,  à la modification et/ou au
    développement et à la reproduction du logiciel par l'utilisateur étant
    donné sa spécificité de logiciel libre, qui peut le rendre complexe à
    manipuler et qui le réserve donc à des développeurs et des professionnels
    avertis possédant  des  connaissances  informatiques approfondies.  Les
    utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
    logiciel à leurs besoins dans des conditions permettant d'assurer la
    sécurité de leurs systèmes et ou de leurs données et, plus généralement,
    à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.

    Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
    pris connaissance de la licence CeCILL, et que vous en avez accepté les
    termes.


    Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)

    pole-architecture.dga-dsi-psi@diplomatie.gouv.fr

    This software is a computer program whose purpose is to facilitate creation of
    web application in accordance with french general repositories : RGI, RGS and RGAA.

    This software is governed by the CeCILL license under French law and
    abiding by the rules of distribution of free software.  You can  use,
    modify and/ or redistribute the software under the terms of the CeCILL
    license as circulated by CEA, CNRS and INRIA at the following URL
    "http://www.cecill.info".

    As a counterpart to the access to the source code and  rights to copy,
    modify and redistribute granted by the license, users are provided only
    with a limited warranty  and the software's author,  the holder of the
    economic rights,  and the successive licensors  have only  limited
    liability.

    In this respect, the user's attention is drawn to the risks associated
    with loading,  using,  modifying and/or developing or reproducing the
    software by the user in light of its specific status of free software,
    that may mean  that it is complicated to manipulate,  and  that  also
    therefore means  that it is reserved for developers  and  experienced
    professionals having in-depth computer knowledge. Users are therefore
    encouraged to load and test the software's suitability as regards their
    requirements in conditions enabling the security of their systems and/or
    data to be ensured and,  more generally, to use and operate it in the
    same conditions as regards security.

    The fact that you are presently reading this means that you have had
    knowledge of the CeCILL license and that you accept its terms.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>fr.gouv.diplomatie.hornet</groupId>
		<artifactId>hornet-service-parent</artifactId>
		<version>5.2.0</version>
	</parent>
	
	<groupId>fr.gouv.diplomatie.formation</groupId>
	<artifactId>appliformation-services</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<inceptionYear>2018</inceptionYear>
	<organization>
		<name>MEAE - Ministère de l'Europe et des Affaires étrangères</name>
	</organization>

	<!-- Properties -->
	<properties>
		<param.dev.path>${project.build.directory}/parametrage-env-dev</param.dev.path>
		<java.version>1.8</java.version>
		<spring-boot.scope>compile</spring-boot.scope>
		<war.exclude>WEB-INF/classes/*.properties,WEB-INF/classes/logback-hornet.xml,WEB-INF/classes/**/${project.artifactId}/Application.class</war.exclude>
	</properties>

	<dependencies>
	
   	    <!-- Import pour les token JWT -->
		<dependency>
			<groupId>org.bitbucket.b_c</groupId>
			<artifactId>jose4j</artifactId>
			<version>0.5.5</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
	
		<!-- Dépendances spécifiques des modules framework -->
		<dependency>
			<groupId>fr.gouv.diplomatie.hornet</groupId>
			<artifactId>hornet-service-core</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.gouv.diplomatie.hornet</groupId>
			<artifactId>hornet-service-data</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.gouv.diplomatie.hornet</groupId>
			<artifactId>hornet-service-metrologiefilter</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.gouv.diplomatie.hornet</groupId>
			<artifactId>hornet-service-web</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.gouv.diplomatie.hornet</groupId>
			<artifactId>hornet-service-webservicehelper</artifactId>
		</dependency>
		
		<!-- Plan de configurations internes -->
		<dependency>
			<groupId>fr.gouv.diplomatie.hornet</groupId>
			<artifactId>hornet-pom-orm</artifactId>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>fr.gouv.diplomatie.hornet</groupId>
			<artifactId>hornet-pom-reports</artifactId>
			<type>pom</type>
		</dependency>
		
		
		<!-- Spécifique à l'appli (issu du BOM) -->		
		<dependency>
			<groupId>net.ju-n.commons-dbcp-jmx</groupId>
			<artifactId>commons-dbcp-jmx-jdbc4</artifactId>
			<classifier>jar-with-dependencies</classifier>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- Spécifique à l'appli (non déclaré dans le BOM) -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.3.5</version>
		</dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.1.4</version>
        </dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.2</version>
		</dependency>

		<!-- Spécifique à l'appli (activation de sping boot en dev) -->
	    <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-devtools</artifactId>
        	<optional>true</optional>
    	</dependency>
    	
        <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-web</artifactId>
	        <scope>${spring-boot.scope}</scope>
	    </dependency>
	    
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-devtools</artifactId>
	        <scope>${spring-boot.scope}</scope>
	        <optional>true</optional>
	    </dependency>        

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
			<scope>${spring-boot.scope}</scope>
		</dependency>    
	    
	    <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<scope>${spring-boot.scope}</scope>
		</dependency>
		
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<scope>${spring-boot.scope}</scope>
	        <exclusions>
	        	<exclusion>
	        		<groupId>org.hibernate</groupId>
	        		<artifactId>hibernate-core</artifactId>
	        	</exclusion>
	        </exclusions>
		</dependency>
		
	</dependencies>

	<build>
		<plugins>
					
			<!-- maven-resources-plugin -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<!-- Ajoute les jasperreports au classpath -->
					<execution>
						<id>copy-resources</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/jasper</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/target/jasper</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!-- Utile uniquement pour le développement dans Eclipse (Aucun impact sur le war généré) -->
					<!-- Sert à filtrer et copier le context.xml 'template' dans le dossier target/m2e-wtp -->
					<execution>
						<id>prepare-context-dev</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/m2e-wtp/web-resources/META-INF</outputDirectory>
							<resources>
								<resource>
									<directory>environment/tc-server</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!-- Utile uniquement pour le développement dans Eclipse (Aucun impact sur le war généré) -->
					<!-- Sert à filtrer et copier la configuration 'dev' dans le répertoire target/parametrage-env-dev -->
					<execution>
						<id>prepare-parametrage-dev</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/parametrage-env-dev</outputDirectory>
							<resources>
								<!-- Filtre uniquement webservices.properties -->
								<resource>
									<directory>environment/develop</directory>
									<filtering>true</filtering>
									<includes>
										<include>webservices.properties</include>
										<include>token.properties</include>
									</includes>
								</resource>
								<!-- Tout le reste n'est pas filtré -->
								<resource>
									<directory>environment/develop</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>webservices.properties</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>truezip-maven-plugin</artifactId>
				<executions>
					<!-- # Zip des context -->
					<execution>
						<id>zip-context</id>
						<goals>
							<goal>copy</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<fileset>
								<directory>environment/tc-server</directory>
								<outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}-context.zip</outputDirectory>
								<includes>
									<include>**/*</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>build-helper-maven-plugin</artifactId>
		        <executions>
		          <execution>
		            <id>attach-context</id>
		            <phase>package</phase>
		            <goals>
		              <goal>attach-artifact</goal>
		            </goals>
		            <configuration>
		              <artifacts>
		                <artifact>
		                  <file>${project.build.directory}/${project.artifactId}-${project.version}-context.zip</file>
		                  <type>zip</type>
		                  <classifier>context</classifier>
		                </artifact>
		              </artifacts>
		            </configuration>
		          </execution>
		        </executions>
		      </plugin>
   	          <plugin>
        		<artifactId>maven-war-plugin</artifactId>
        		<configuration>
			    	<packagingExcludes>${war.exclude}</packagingExcludes>
        		</configuration>
        	</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>package-config-templates</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<!-- <property> <name>project.packaging</name> <value>war</value> </property> -->
				<file>
					<exists>environment/templates/logback-hornet.xml</exists>
				</file>
			</activation>

			<properties>
				<rootproject.basedir>${session.executionRootDirectory}</rootproject.basedir>
				<configTemplateClassifier>environment</configTemplateClassifier>
				<configTemplateZip>${project.build.directory}/${project.artifactId}-${project.version}-${configTemplateClassifier}.zip</configTemplateZip>
				<configEnvTarget>DEV</configEnvTarget>
			</properties>

			<build>
				<pluginManagement>
					<plugins>
<!-- 						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>exec-maven-plugin</artifactId>
							<version>1.5.0</version>
							<executions>
								<execution>
									<id>validator-environment-templates</id>
									<phase>validate</phase>
									<goals>
										<goal>exec</goal>
									</goals>
									<configuration>
										<workingDirectory>${project.basedir}</workingDirectory>
										<executable>bash</executable>
										<arguments>
											<argument>${rootproject.basedir}/builder-tools/template-validator.sh</argument>
											<argument>${project.basedir}/environment</argument>
											<argument>${project.build.directory}/test-config</argument>
											<argument>${configEnvTarget}</argument>
										</arguments>
									</configuration>
								</execution>
							</executions>
						</plugin>
 -->
						<!-- Validator de templates S'assurer que tout les tag #{VAR_NAME} 
							sont bien substitué avec les propriété du fichier ${project.basedir}/environment/configuration/${configEnvTarget}.properties -->
						<plugin>
							<artifactId>maven-resources-plugin</artifactId>
							<executions>
								<execution>
									<id>prepare-zip-environment-configuration</id>
									<phase>process-resources</phase>
									<goals>
										<goal>copy-resources</goal>
									</goals>
									<configuration>
										<outputDirectory>${project.build.directory}/${configTemplateClassifier}/configuration</outputDirectory>
										<resources>
											<resource>
												<directory>environment/configuration</directory>
												<filtering>false</filtering>
											</resource>
										</resources>
									</configuration>
								</execution>
								<execution>
									<id>prepare-zip-environment-templates</id>
									<phase>process-resources</phase>
									<goals>
										<goal>copy-resources</goal>
									</goals>
									<configuration>
										<outputDirectory>${project.build.directory}/${configTemplateClassifier}/templates</outputDirectory>
										<resources>
											<resource>
												<directory>environment/templates</directory>
												<filtering>false</filtering>
											</resource>
										</resources>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>truezip-maven-plugin</artifactId>
							<executions>
								<execution>
									<id>package-zip-environment</id>
									<phase>package</phase>
									<goals>
										<goal>copy</goal>
									</goals>
									<configuration>
										<filesets>
											<fileset>
												<directory>${project.build.directory}/${configTemplateClassifier}</directory>
												<outputDirectory>${configTemplateZip}</outputDirectory>
											</fileset>
										</filesets>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>build-helper-maven-plugin</artifactId>
							<executions>
								<execution>
									<id>attach-zip-environment</id>
									<phase>package</phase>
									<goals>
										<goal>attach-artifact</goal>
									</goals>
									<configuration>
										<artifacts>
											<artifact>
												<file>${configTemplateZip}</file>
												<type>zip</type>
												<classifier>${configTemplateClassifier}</classifier>
											</artifact>
										</artifacts>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>

				<plugins>
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
		       					<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>truezip-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
   		<profile>
			<id>dev-spring-boot</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<spring-boot.scope>compile</spring-boot.scope>
				<war.exclude></war.exclude>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-parametrage-dev-boot</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.outputDirectory}</outputDirectory>
									<resources>
	<!-- 									Filtre uniquement webservices.properties -->
										<resource>
											<directory>environment/develop</directory>
											<filtering>true</filtering>
											<includes>
												<include>webservices.properties</include>
												<include>token.properties</include>
											</includes>
										</resource>
	<!-- 									Tout le reste n'est pas filtré -->
										<resource>
											<directory>environment/develop</directory>
											<filtering>false</filtering>
											<excludes>
												<exclude>webservices.properties</exclude>
											</excludes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
			  		<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<executions>
						    <execution>
						        <goals>
						            <goal>repackage</goal>
						        </goals>
						    </execution>
						    
						</executions>
						<configuration>
			                 <addResources>./environment/develop</addResources>
		                </configuration>
			    	</plugin>
           		</plugins>
       		</build>
		</profile>
		
	</profiles>
</project>
